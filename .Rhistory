install.packages("swirl")
setwd("~/")
find.packages("devtools")
install.packages("devtools")
find.packages("devtools")
find.packages("devtools")
install.packages("devtools")
install.packages("devtools")
find.packages("devtools")
library(devtools)
find_rtools()
install.packages("swirl")
library(swirl)
swirl()
5+7
x<5+7
x<-5+7
x
y<-x-3
y
x<-c(1.1, 9, 3.14)
x<-c(1.1,9,3.14)
z <- c(1.1, 9, 3.14)
?c
z
a<=(z,555,z)
a<=c(z,555,z)
a<-c(z,555,z)
c(z,555,z)
z * 2 + 100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 1000)
z * 2 + 1000
my_
my_sqrt
sqrt
my
my_div
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0, 10, by=0.5)
my_seq<- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect<-c(0.5,5,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect >= 6
my_char<-c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name<- c(my_char, "avan")
my_name
paste(my_char, collapse = "")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste("Hello", "world!", sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- us.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x (i.e. x[0])
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names()
names(vecg)
names(vect)
c(11, 2, NA)
vect2<-c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<- my_vector
?matrix
my_matrix2<-matrix(nrow=4,ncol=5)
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c(Bill, Gina, Kelly, and Sean)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c( "patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
q()
library(datasets)
data(iris)
?iris
Sepal.Length
Sepal.Length()
mean(Sepal.Length())
iris
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
q()
source.with.encoding('C:/Users/Avan/Desktop/coursera/Getting_and_Cleaning_Data/run_analysis.R', encoding='UTF-8')
setwd("~/")
setwd("C:\\Users\\Avan\\Desktop\\coursera\\")
source("run_analysis.R")
setwd("C:\\Users\\Avan\\Desktop\\coursera\\Getting_and_Cleaning_Data")
source("run_analysis.R")
View(X)
source("run_analysis.R")
source("run_analysis.R")
View(tidy)
View(Y)
View(tidy)
View(result)
View(features)
View(S)
View(activities)
source("run_analysis.R")
View(merged)
View(merged)
source("run_analysis.R")
